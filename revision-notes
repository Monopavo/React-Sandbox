## Installation

-----       . Vite is a 




----- Integrating TypeScript is a little more involved...




## Components

----- React is a library that focuses on responsive UI, and it achieves this through creating modular "components", each with their own defined state and interactivity. "Functional components" are the concise, modern way of creating components, effectively replacing "class components"...

/*Arrow function component */
const myComponent = () => <div>This is a component!</div>; 

/* Function literal component */
function MyComponent() {
    return <div>This is a component!</div>;
};

/* Class Component */
class MyComponent extends React.Component {
  render() {
    return <div>This is a component!</div>;
  }
};

----- When using TypeScript, the "React.FC" type is used for functional components. It is far more concise than the type for class components, so class components tend to be avoided in modern applications...

// Arrow function component
const MyComponent: React.FC = () => <div>This is a component!</div>;

// Function literal component
function MyComponent(): React.FC {
  return <div>This is a component!</div>;
};

// Class Component
class MyComponent extends React.Component<{}, {}> {
  render() {
    return <div>This is a component!</div>;
  }
};

----- Arrow function components are considered the ideal component syntax for modern applications, and therefore a best practice.